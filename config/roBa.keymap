#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        m_copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_WIN &kp C>;
            label = "COPY";
        };

        m_paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_WIN &kp V>;
            label = "PASTE";
        };

        m_copy_to_search: m_copy_to_search {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_WIN &kp C>,
                <&macro_wait_time 100>,
                <&kp LEFT_WIN &kp T>,
                <&macro_wait_time 100>,
                <&kp LEFT_WIN &kp V>,
                <&macro_wait_time 100>,
                <&kp SPACE>,
                <&macro_wait_time 100>,
                <&kp ENTER>;

            label = "M_COPY_TO_SEARCH";
        };

        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL_UP_DOWN";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W         &kp E    &kp R          &kp T                                                    &kp Y             &kp U  &kp I  &kp O      &kp P
&kp A         &kp S         &kp D    &kp F          &kp G                      &kp LS(LG(S))      &kp H      &kp H             &kp J  &kp K  &kp L      &kp MINUS
&kp LCTRL     &kp Z         &kp X    &kp C          &kp V                      &kp COLON          &kp B      &kp B             &kp N  &kp M  &kp COMMA  &kp PERIOD
&kp LEFT_WIN  &kp LEFT_ALT  &kp TAB  &kp BACKSPACE  &mt LEFT_SHIFT LANGUAGE_2  &kp SPACE          &kp ENTER  &lt 2 LANGUAGE_1                           &kp ESC
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&kp NUMBER_7  &kp N8        &kp N9        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                                &kp LESS_THAN  &kp GREATER_THAN  &kp SQT    &kp EQUAL        &kp MINUS
&kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LC(LA(KP_NUMBER_0))      &kp EXCLAMATION  &kp SLASH      &kp UP_ARROW      &kp HASH   &kp DOLLAR       &kp GRAVE
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EQUAL                    &kp QUESTION     &kp LEFT       &kp DOWN          &kp RIGHT  &kp RIGHT_BRACE  &kp BACKSLASH
&trans        &trans        &kp N0        &trans                &trans                 &trans                       &trans           &trans                                                       &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans         &trans             &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB5  &mkp MB1  &kp PG_UP      &mkp MB2           &m_copy
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB4  &mkp MB3  &kp PAGE_DOWN  &m_copy_to_search  &m_paste
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
